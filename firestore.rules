rules_version = '2';

service cloud.firestore {
  function isAuth() {
    return request.auth != null;
  }
  function isAdmin() {
    return isAuth()
      && request.auth.token.admin == true;
  }
  function isOwner() {
    return request.auth.uid == resource.data.userId;
  }
  function isSelf(userId) {
    return request.auth.uid == userId;
  }
  function isPublic() {
    return resource.data.isPublic == true;
  }
  function createOnly(fields) {
    return request.resource.data.keys().hasOnly(fields);
  }
  function notCreate(fields) {
    return (!request.resource.data.keys().hasAny(fields));
  }
  function updateOnly(fields) {
    return request.resource.data.diff(resource.data).affectedKeys().hasOnly(fields);
  }
  function notUpdate(fields) {
    return (!request.resource.data.diff(resource.data).affectedKeys().hasAny(fields));
  }
  function isValidImage(data) {
    return data.get('id', '') is string
      && data.get('url', '') is string
      && data.get('alt', '') is string;
  }
  function isValidUser(data) {
    return data.get('firstName', '') is string
      && data.get('lastName', '') is string
      && data.get('username', '') is string
      && data.get('email', '') is string
      && data.get('gender', 'NotWilling') in ['Men', 'Women', 'NotWilling']
      && data.get('phoneNumber', '') is string
      && isValidImage(data.get('avatar', {}))
      && data.get('subscribeToPromotion', true) is bool
      && data.get('isAdmin', true) is bool
      && data.get('isAnonymous', true) is bool
      && data.get('role', 'anonymous') in ['anonymous', 'user', 'admin']
      && data.get('emailVerified', true) is bool
      && data.get('providerId', '') is string;
  }
  function isValidAddress(data) {
    return data.get('remark', '') is string
      && data.get('region', '') is string
      && data.get('district', '') is string
      && data.get('detailAddress', '') is string
      && data.get('contactName', '') is string
      && data.get('contactPhoneNumber', '') is string
      && data.createdAt is timestamp
      && data.updatedAt is timestamp;
  }
  function isValidCartItem(data) {
    return data.get('productId', '') is string
      && data.get('nameZH', '') is string
      && data.get('nameEN', '') is string
      && data.get('descriptionZH', '') is string
      && data.get('descriptionEN', '') is string
      && isValidImage(data.get('image', {}))
      && data.get('sellingPrice', 0) is number
      && data.get('markedPrice', 0) is number
      && data.get('stock', 0) is number
      && data.get('collectionId', '') is string
      && data.get('collectionNameZH', '') is string
      && data.get('collectionNameEN', '') is string
      && data.get('brandId', '') is string
      && data.get('brandNameZH', '') is string
      && data.get('brandNameEN', '') is string
      && data.get('categoryId', '') is string
      && data.get('categoryNameZH', '') is string
      && data.get('categoryNameEN', '') is string
      && data.get('commentCount', 0) is number
      && data.get('rating', 0) is number
      && data.get('quantity', 0) is number
      && data.createdAt is timestamp
      && data.updatedAt is timestamp;
  }
  function isValidWishlistItem(data) {
    return data.get('productId', '') is string
      && data.get('nameZH', '') is string
      && data.get('nameEN', '') is string
      && data.get('descriptionZH', '') is string
      && data.get('descriptionEN', '') is string
      && isValidImage(data.get('image', {}))
      && data.get('sellingPrice', 0) is number
      && data.get('markedPrice', 0) is number
      && data.get('stock', 0) is number
      && data.get('collectionId', '') is string
      && data.get('collectionNameZH', '') is string
      && data.get('collectionNameEN', '') is string
      && data.get('brandId', '') is string
      && data.get('brandNameZH', '') is string
      && data.get('brandNameEN', '') is string
      && data.get('categoryId', '') is string
      && data.get('categoryNameZH', '') is string
      && data.get('categoryNameEN', '') is string
      && data.get('commentCount', 0) is number
      && data.get('rating', 0) is number
      && data.createdAt is timestamp
      && data.updatedAt is timestamp;
  }

  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if isSelf(userId) || isAdmin();
      allow create: if (isSelf(userId) || isAdmin())
        && createOnly(['firstName', 'lastName', 'username', 'email', 'gender', 'phoneNumber', 'avatar', 'subscribeToPromotion', 'isAdmin', 'isAnonymous', 'role', 'emailVerified', 'providerData', 'providerId', 'dateOfBirth', 'createdAt', 'registeredAt', 'updatedAt', 'lastLoggedInAt'])
        && notCreate(['totalSpent', 'orderCount', 'totalDiscountAmount', 'couponUsedCount'])
        && isValidUser(request.resource.data);
      allow update: if (isSelf(userId) || isAdmin())
        && updateOnly(['firstName', 'lastName', 'username', 'email', 'gender', 'phoneNumber', 'avatar', 'subscribeToPromotion', 'isAdmin', 'isAnonymous', 'role', 'emailVerified', 'providerData', 'providerId', 'dateOfBirth', 'createdAt', 'registeredAt', 'updatedAt', 'lastLoggedInAt'])
        && notUpdate(['totalSpent', 'orderCount', 'totalDiscountAmount', 'couponUsedCount'])
        && isValidUser(request.resource.data);
      allow delete: if false;

      match /notifications/{notificationId} {
        allow read: if isSelf(userId) || isAdmin();
        allow create, update: if isAdmin();
        allow delete: if isSelf(userId) || isAdmin();
      }

      match /addresses/{addressId} {
        allow read: if isSelf(userId) || isAdmin();
        allow create: if (isSelf(userId) || isAdmin())
          && createOnly(['remark', 'region', 'district', 'detailAddress', 'contactName', 'contactPhoneNumber', 'createdAt', 'updatedAt', 'deletedAt'])
          && isValidAddress(request.resource.data);
        allow update: if (isSelf(userId) || isAdmin())
          && updateOnly(['remark', 'region', 'district', 'detailAddress', 'contactName', 'contactPhoneNumber', 'createdAt', 'updatedAt', 'deletedAt'])
          && isValidAddress(request.resource.data);
        allow delete: if false;
      }

      match /cartItems/{cartItemId} {
        allow read: if isSelf(userId) || isAdmin();
        allow create: if (isSelf(userId) || isAdmin())
          && createOnly(['productId', 'nameZH', 'nameEN', 'descriptionZH', 'descriptionEN', 'image', 'sellingPrice', 'markedPrice', 'stock', 'collectionId', 'collectionNameZH', 'collectionNameEN', 'brandId', 'brandNameZH', 'brandNameEN', 'categoryId', 'categoryNameZH', 'categoryNameEN', 'commentCount', 'rating', 'quantity', 'createdAt', 'updatedAt'])
        allow update: if (isSelf(userId) || isAdmin())
          && updateOnly(['productId', 'nameZH', 'nameEN', 'descriptionZH', 'descriptionEN', 'image', 'sellingPrice', 'markedPrice', 'stock', 'collectionId', 'collectionNameZH', 'collectionNameEN', 'brandId', 'brandNameZH', 'brandNameEN', 'categoryId', 'categoryNameZH', 'categoryNameEN', 'commentCount', 'rating', 'quantity', 'createdAt', 'updatedAt'])
          && isValidCartItem(request.resource.data);
        allow delete: if isSelf(userId) || isAdmin();
      }

      match /wishlistItems/{cartItemId} {
        allow read: if isSelf(userId) || isAdmin();
        allow create: if (isSelf(userId) || isAdmin()) 
          && createOnly(['productId', 'nameZH', 'nameEN', 'descriptionZH', 'descriptionEN', 'image', 'sellingPrice', 'markedPrice', 'stock', 'collectionId', 'collectionNameZH', 'collectionNameEN', 'brandId', 'brandNameZH', 'brandNameEN', 'categoryId', 'categoryNameZH', 'categoryNameEN', 'commentCount', 'rating', 'createdAt', 'updatedAt'])
          && isValidWishlistItem(request.resource.data);
        allow update: if (isSelf(userId) || isAdmin()) 
          && updateOnly(['productId', 'nameZH', 'nameEN', 'descriptionZH', 'descriptionEN', 'image', 'sellingPrice', 'markedPrice', 'stock', 'collectionId', 'collectionNameZH', 'collectionNameEN', 'brandId', 'brandNameZH', 'brandNameEN', 'categoryId', 'categoryNameZH', 'categoryNameEN', 'commentCount', 'rating', 'createdAt', 'updatedAt'])
          && isValidWishlistItem(request.resource.data);
        allow delete: if isSelf(userId) || isAdmin();
      }

      match /orderLists/{listId} {
        allow read: if isSelf(userId) || isAdmin();
        allow write: if false;
      }
      
      match /commentLists/{listId} {
        allow read: if isSelf(userId) || isAdmin();
        allow write: if false;
      }

      match /lists/{listName} {
        allow read: if isSelf(userId) || isAdmin();
        allow write: if false;
      }
    }
    
    match /privateUserLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /comments/{commentId} {
      allow read: if true;
      allow create: if isAdmin();
      allow update: if (isOwner() || isAdmin())
        && updateOnly(['title', 'content', 'images', 'rating', 'published', 'createdAt', 'updatedAt'])
        && notUpdate(['orderId', 'productId', 'productNameZH', 'productNameEN', 'productDescriptionZH', 'productDescriptionEN', 'productImage', 'boughtQuantity', 'userId', 'userFirstName', 'userLastName', 'userEmail', 'userAvatar', 'userRole', 'replies']);
      allow delete: if false;
    }

    match /replies/{replyId} {
      allow read: if true;
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    match /products/{productId} {
      allow read: if isPublic() || isAdmin();
      allow create, update: if isAdmin();
      allow delete: if false;

      match /commentLists/{listId} {
        allow read: if true;
        allow write: if false;
      }

      match /others/subscriberList {
        allow read: if true;
        allow create, update: if true;
        allow delete: if false;
      }
    }

    match /privateProductLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /productLists/{listId} {
      allow read: if true;
      allow write: if false;
    }
    
    match /privateCommentLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /orders/{orderId} {
      allow read: if isOwner() || isAdmin();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if false;
    }

    match /pendingOrders/{pendingOrderId} {
        allow read: if isOwner() || isAdmin();
        allow create: if isAdmin();
        allow update: if isAdmin();
        allow delete: if false;
    }

    match /privateOrderLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /coupons/{couponId} {
      allow read, create, update: if isAdmin();
      allow delete: if false;

      match /usageRecords/{couponUsageRecordId} {
        allow read: if isAdmin();
        allow write: if false;
      }

      match /usageRecordLists/{listId} {
        allow read: if isAdmin();
        allow write: if false;
      }
    }

    match /privateCouponLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }
    
    match /couponLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /deliveryOptions/{deliveryOptionId} {
      allow read: if isAdmin();
      allow create, update: if isAdmin();
      allow delete: if false;

      match /usageRecords/{couponUsageRecordId} {
        allow read: if isAdmin();
        allow write: if false;
      }

      match /usageRecordLists/{listId} {
        allow read: if isAdmin();
        allow write: if false;
      }
    }

    match /privateDeliveryOptionLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /deliveryOptionLists/{listId} {
      allow read: if true;
      allow write: if false;
    }

    match /brands/{brandId} {
      allow read: if isAdmin()
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    match /categories/{categoryId} {
      allow read: if isAdmin()
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    match /collections/{collectionId} {
      allow read: if isAdmin()
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    match /tags/{tagId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /privateLists/{listName} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /lists/{listName} {
      allow read: if true;
      allow write: if false;
    }

    match /dailyStatistics/{date} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /monthlyStatistics/{date} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /monthlyStatistics/{month} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /yearlyStatistics/{year} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /allHistoryStatistic/{name} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /admin/{aggregatorName} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /smartBars/{smartBarId} {
      allow read: if isAdmin();
      allow create, update: if isAdmin();
      allow delete: if false;
    }

    match /privateSmartBarLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /smartBarLists/{listId} {
      allow read: if true;
      allow write: if false;
    }

    match /storeAddresses/{storeAddressId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /store/{aggregatorName} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    match /salesRecords/{salesRecordId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /salesRecordLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /mail/{mailId} {
      allow read, write: if isAdmin();
    }

    match /notifications/{mailId} {
      allow read, write: if isAdmin();
    }

    match /promotions/{promotionId} {
      allow read, write: if isAdmin();
    }

    match /promotionLists/{listId} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /promotion/subscriberList {
      allow read: if isAdmin();
      allow create, update: if true;
      allow delete: if false;
    }
  }
}